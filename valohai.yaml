- step:
    command:
    - pwd
    - lsb_release -a
    - python --version
    - python -c "import keras; print(keras.__version__);"
    - python -c "import tensorflow; print(tensorflow.__version__);"
    - python -c "from tensorflow.python.client import device_lib; device_lib.list_local_devices();"
    - nvidia-smi
    - nvcc --version | grep release
    - cat /usr/include/x86_64-linux-gnu/cudnn_v*.h | grep CUDNN_MAJOR -A 2
    image: valohai/keras:2.1.3-tensorflow1.4.0-python3.5-cuda8.0-cudnn6-devel-ubuntu14.04
    name: tensorflow-check
- step:
    command: python keras-dvc-cnn-simple.py
    image: valohai/keras:2.1.3-tensorflow1.4.0-python3.5-cuda8.0-cudnn6-devel-ubuntu14.04
    inputs:
    - default: swift://f8a5dbc8033343aea820c139245afe13/BDA/train/train-set-images.tar.gz
      name: train
      optional: false
    - default: swift://f8a5dbc8033343aea820c139245afe13/BDA/test/test-set-images.tar.gz
      name: test
      optional: false
    - default: swift://f8a5dbc8033343aea820c139245afe13/BDA/validation/validation-set-images.tar.gz
      name: validation
      optional: false
    name: run keras cnn simple example

